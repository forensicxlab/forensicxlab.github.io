"use strict";(self.webpackChunkexhume=self.webpackChunkexhume||[]).push([[6127],{6374:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>d});var n=s(9390),a=s(4848),r=s(8453);const o={slug:"keepass",title:"\ud83d\udce6 Volatility3 Windows Plugin - KeePass",authors:["k1nd0ne"],tags:["DFIR","Memory Forensics","KeePass","Windows"]},i=void 0,l={authorsImageUrls:[void 0]},d=[{value:"Vulnerability description",id:"vulnerability-description",level:2},{value:"The KeePass volatility3 plugin",id:"the-keepass-volatility3-plugin",level:2},{value:"Conclusion",id:"conclusion",level:2}];function c(e){const t={a:"a",blockquote:"blockquote",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",section:"section",sup:"sup",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["On May 1st, 2023, vdhoney",(0,a.jsx)(t.sup,{children:(0,a.jsx)(t.a,{href:"#user-content-fn-1-8d99df",id:"user-content-fnref-1-8d99df","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})})," raised concerns about a flaw he found impacting KeePass 2.X.",(0,a.jsx)(t.sup,{children:(0,a.jsx)(t.a,{href:"#user-content-fn-2-8d99df",id:"user-content-fnref-2-8d99df","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"2"})}),". Vdhoney claimed to be able to reconstruct the master password from memory.\nA POC ",(0,a.jsx)(t.sup,{children:(0,a.jsx)(t.a,{href:"#user-content-fn-3-8d99df",id:"user-content-fnref-3-8d99df","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"3"})})," was later released by the researcher not only in dotnet but also in python3",(0,a.jsx)(t.sup,{children:(0,a.jsx)(t.a,{href:"#user-content-fn-4-8d99df",id:"user-content-fnref-4-8d99df","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"4"})}),"."]}),"\n",(0,a.jsx)(t.p,{children:"Today in this blog post we will describe the vulnerability and see how we can create a volatility3 plugin to help forensics investigators to retrieve passwords from memory."}),"\n",(0,a.jsx)(t.h2,{id:"vulnerability-description",children:"Vulnerability description"}),"\n",(0,a.jsxs)(t.p,{children:["The vulnerability (CVE-2023-32784 ",(0,a.jsx)(t.sup,{children:(0,a.jsx)(t.a,{href:"#user-content-fn-5-8d99df",id:"user-content-fnref-5-8d99df","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"5"})}),") resides in the basic KeePass version 2.X written in .NET. This version utilizes its own custom-made text box named SecureTextBoxEx, not only for the master password entry dialog but also in other parts of the program such as password edit boxes. Though this use case is not likely to be used by users as it is a bad practice, it should be noted that the flaw does not cover the scenario where the master password was copied from a clipboard.\nFrom this observation, Vdohney built up a method to recover that scattered information from memory. Indeed, this text box produces left over strings when a password is entered. For example, when \u201cHello\u201d is typed, the following strings remain present in memory \u201c\u2022e, \u2022\u2022l, \u2022\u2022\u2022l, \u2022\u2022\u2022\u2022o\u201d. One can find more details about this vulnerability on vdhoney\u2019s github ",(0,a.jsx)(t.sup,{children:(0,a.jsx)(t.a,{href:"#user-content-fn-3-8d99df",id:"user-content-fnref-3-8d99df-2","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"3"})}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"the-keepass-volatility3-plugin",children:"The KeePass volatility3 plugin"}),"\n",(0,a.jsx)(t.p,{children:"As a forensics investigator, you might have actual (or past) cases where KeePass 2.X process activities were retrieved. Using volatility3, it is possible to list the running processes using the \u201cpslist\u201d or \u201cpsscan\u201d plugin."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"~/work/DFIR/Memory Analysis/MemoryImages/KeePassMachine \xbb vol -f KeePassMachine.mem windows.pslist\nVolatility 3 Framework 2.4.1\nProgress:  100.00\t\tPDB scanning finished\nPID\tPPID\tImageFileName\tOffset(V)\tThreads\tHandles\tSessionId\tWow64\tCreateTime\tExitTime\tFile output\n\n4\t0\tSystem\t0x9908d5a87040\t136\t-\tN/A\tFalse\t2023-05-19 14:20:08.000000 \tN/A\tDisabled\n108\t4\tRegistry\t0x9908d5af6080\t4\t-\tN/A\tFalse\t2023-05-19 14:20:04.000000 \tN/A\tDisabled\n412\t4\tsmss.exe\t0x9908dabd8040\t2\t-\tN/A\tFalse\t2023-05-19 14:20:08.000000 \tN/A\tDisabled\n532\t516\tcsrss.exe\t0x9908dac800c0\t11\t-\t0\tFalse\t2023-05-19 14:20:32.000000 \tN/A\tDisabled\n628\t516\twininit.exe\t0x9908db831080\t3\t-\t0\tFalse\t2023-05-19 14:20:32.000000 \tN/A\tDisabled\n648\t620\tcsrss.exe\t0x9908db847140\t13\t-\t1\tFalse\t2023-05-19 14:20:32.000000 \tN/A\tDisabled\n700\t628\tservices.exe\t0x9908db894080\t7\t-\t0\tFalse\t2023-05-19 14:20:32.000000 \tN/A\tDisabled\n740\t620\twinlogon.exe\t0x9908db8a4080\t3\t-\t1\tFalse\t2023-05-19 14:20:32.000000 \tN/A\tDisabled\n796\t628\tlsass.exe\t0x9908db8c8080\t6\t-\t0\tFalse\t2023-05-19 14:20:32.000000 \tN/A\tDisabled\n912\t700\tsvchost.exe\t0x9908db936240\t13\t-\t0\tFalse\t2023-05-19 14:20:32.000000 \tN/A\tDisabled\n1716\t912\tdllhost.exe\t0x9908de764080\t5\t-\t1\tFalse\t2023-05-19 14:23:07.000000 \tN/A\tDisabled\n4888\t700\tSgrmBroker.exe\t0x9908df512080\t7\t-\t0\tFalse\t2023-05-19 14:23:08.000000 \tN/A\tDisabled\n7820\t912\tWmiPrvSE.exe\t0x9908da4f7080\t4\t-\t0\tFalse\t2023-05-19 14:23:26.000000 \tN/A\tDisabled\n4272\t4528\tFTK Imager.exe\t0x9908da509080\t12\t-\t1\tFalse\t2023-05-19 14:23:42.000000 \tN/A\tDisabled\n4100\t700\tWUDFHost.exe\t0x9908de9a3080\t5\t-\t0\tFalse\t2023-05-19 14:23:43.000000 \tN/A\tDisabled\n2868\t912\tShellExperienc\t0x9908dec2c080\t9\t-\t1\tFalse\t2023-05-19 14:23:45.000000 \tN/A\tDisabled\n7684\t912\tRuntimeBroker.\t0x9908d7f0d2c0\t3\t-\t1\tFalse\t2023-05-19 14:23:46.000000 \tN/A\tDisabled\n752\t4528\tKeePass.exe\t0x9908da51b300\t4\t-\t1\tFalse\t2023-05-19 14:25:34.000000 \tN/A\tDisabled\n6344\t700\tsvchost.exe\t0x9908dd88a080\t5\t-\t0\tFalse\t2023-05-19 14:25:49.000000 \tN/A\tDisabled\n"})}),"\n",(0,a.jsx)(t.p,{children:"In this example we can see that the KeePass process was running on the host machine. The PID retrieved is \u201c752\u201d.\nUsing volatility3, one can dump this process layer and retrieve all the sections linked to the virtual address spaces. Once completed, one can map virtual pages to physical pages and extract the residing data."}),"\n",(0,a.jsxs)(t.p,{children:["A custom plugin allows to parse the data to isolate the relevant patterns (in this case \u201c\u25cf\u201d) seeking to further attempt the reconstruction of the master KeePass password entered by a user. The plugin can be found here: ",(0,a.jsx)(t.a,{href:"https://github.com/forensicxlab/volatility3_plugins/blob/main/keepass.py",children:"https://github.com/forensicxlab/volatility3_plugins/blob/main/keepass.py"})]}),"\n",(0,a.jsx)(t.p,{children:"By passing the PID of the process to the volatility3 KeePass plugin, one can try to reconstruct the master password:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"~/work/DFIR/Memory Analysis/MemoryImages/KeePassMachine \xbb vol -f KeePassMachine.mem windows.keepass --pid 752                                                                                                          k1nd0ne@MacBook-Pro-de-Felix\nVolatility 3 Framework 2.4.1\nProgress:  100.00\t\tPDB scanning finished\nOffset\tSize\tConstructed_Password\n\n0x3ba6000\t0x1000\tu\n0x3ba7000\t0x1000\tup\n0x3ba7000\t0x1000\tupe\n0x3ba8000\t0x1000\tuper\n0x3ba9000\t0x1000\tuperM\n0x3ba9000\t0x1000\tuperMa\n0x3baa000\t0x1000\tuperMa\n0x3baa000\t0x1000\tuperMas\n0x3bab000\t0x1000\tuperMast\n0x3bab000\t0x1000\tuperMaste\n0x3bac000\t0x1000\tuperMaste\n0x3bac000\t0x1000\tuperMaster\n0x3bad000\t0x7000\tuperMasterP\n0x3bad000\t0x7000\tuperMasterPa\n0x3bad000\t0x7000\tuperMasterPas\n0x3bad000\t0x7000\tuperMasterPass\n0x3bad000\t0x7000\tuperMasterPassw\n0x3bad000\t0x7000\tuperMasterPasswo\n0x3bad000\t0x7000\tuperMasterPasswor\n0x3bad000\t0x7000\tuperMasterPassword\n0x7ffbf8ac5000\t0x1000\tuperMasterPassword\n0x96e545bd2000\t0x1000\t{u,,}perMasterPassword\n0xc58000400000\t0x200000\t{u,&,o}perMasterPassword\n0xf80564600000\t0x1200000\t{u,&,,,J}perMasterPassword\n0xf805737d3000\t0x1f000\t{u,&,,,o, }perMasterPassword\n"})}),"\n",(0,a.jsx)(t.p,{children:"Even if the first character of the password is not store in memory, the latter can be however easily brute forced."}),"\n",(0,a.jsx)(t.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,a.jsx)(t.p,{children:"To conclude this article, we demonstrated that the reconstruction of a master password of Keepass can be implemented into volatility3 framework via a custom plugin. The discovery of new memory extraction techniques is helping the field of digital forensics and specially law enforcement agencies that are now able to access memory from devices in a more efficient and non-destructive way. This methodology could be valuable in solving actual incident cases, including past ones where the memory was retrieved and stored and keepass master password remained unbroke."}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["This plugin was tested on a Win10 22H2 memory image. Do not hesitate to reach me at ",(0,a.jsx)(t.a,{href:"mailto:felix.guyard@forensicxlab.com",children:"felix.guyard@forensicxlab.com"})," to enhance this article."]}),"\n"]}),"\n","\n",(0,a.jsxs)(t.section,{"data-footnotes":!0,className:"footnotes",children:[(0,a.jsx)(t.h2,{className:"sr-only",id:"footnote-label",children:"Footnotes"}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsxs)(t.li,{id:"user-content-fn-1-8d99df",children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"https://sourceforge.net/u/v2023/profile/",children:"https://sourceforge.net/u/v2023/profile/"})," ",(0,a.jsx)(t.a,{href:"#user-content-fnref-1-8d99df","data-footnote-backref":"","aria-label":"Back to reference 1",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{id:"user-content-fn-2-8d99df",children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"https://sourceforge.net/p/keepass/discussion/329220/thread/f3438e6283/",children:"https://sourceforge.net/p/keepass/discussion/329220/thread/f3438e6283/"})," ",(0,a.jsx)(t.a,{href:"#user-content-fnref-2-8d99df","data-footnote-backref":"","aria-label":"Back to reference 2",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{id:"user-content-fn-3-8d99df",children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"https://github.com/vdohney/keepass-password-dumper",children:"https://github.com/vdohney/keepass-password-dumper"})," ",(0,a.jsx)(t.a,{href:"#user-content-fnref-3-8d99df","data-footnote-backref":"","aria-label":"Back to reference 3",className:"data-footnote-backref",children:"\u21a9"})," ",(0,a.jsxs)(t.a,{href:"#user-content-fnref-3-8d99df-2","data-footnote-backref":"","aria-label":"Back to reference 3-2",className:"data-footnote-backref",children:["\u21a9",(0,a.jsx)(t.sup,{children:"2"})]})]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{id:"user-content-fn-4-8d99df",children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"https://github.com/CMEPW/keepass-dump-masterkey",children:"https://github.com/CMEPW/keepass-dump-masterkey"})," ",(0,a.jsx)(t.a,{href:"#user-content-fnref-4-8d99df","data-footnote-backref":"","aria-label":"Back to reference 4",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{id:"user-content-fn-5-8d99df",children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-32784",children:"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-32784"})," ",(0,a.jsx)(t.a,{href:"#user-content-fnref-5-8d99df","data-footnote-backref":"","aria-label":"Back to reference 5",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>i});var n=s(6540);const a={},r=n.createContext(a);function o(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(r.Provider,{value:t},e.children)}},9390:e=>{e.exports=JSON.parse('{"permalink":"/blog/keepass","source":"@site/blog/2023-05-19-keepass/index.md","title":"\ud83d\udce6 Volatility3 Windows Plugin - KeePass","description":"On May 1st, 2023, vdhoney raised concerns about a flaw he found impacting KeePass 2.X.. Vdhoney claimed to be able to reconstruct the master password from memory.","date":"2023-05-19T00:00:00.000Z","tags":[{"inline":true,"label":"DFIR","permalink":"/blog/tags/dfir"},{"inline":true,"label":"Memory Forensics","permalink":"/blog/tags/memory-forensics"},{"inline":true,"label":"KeePass","permalink":"/blog/tags/kee-pass"},{"inline":true,"label":"Windows","permalink":"/blog/tags/windows"}],"readingTime":4.36,"hasTruncateMarker":true,"authors":[{"name":"k1nd0ne","title":"Digital Forensics Spiderman","url":"https://github.com/k1n0ne","page":{"permalink":"/blog/authors/k-1-nd-0-ne"},"socials":{"x":"https://x.com/k1nd0ne","github":"https://github.com/k1nd0ne"},"imageURL":"https://avatars.githubusercontent.com/u/27780432?v=4","key":"k1nd0ne"}],"frontMatter":{"slug":"keepass","title":"\ud83d\udce6 Volatility3 Windows Plugin - KeePass","authors":["k1nd0ne"],"tags":["DFIR","Memory Forensics","KeePass","Windows"]},"unlisted":false,"prevItem":{"title":"\ud83d\udd26 Video Games Forensics - Steam","permalink":"/blog/steam"},"nextItem":{"title":"\ud83d\udd26 Debunking the Expert Witness Compression Format (EWF)","permalink":"/blog/ewf"}}')}}]);