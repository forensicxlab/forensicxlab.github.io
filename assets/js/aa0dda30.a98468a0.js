"use strict";(self.webpackChunkexhume=self.webpackChunkexhume||[]).push([[2229],{8453:(e,t,i)=>{i.d(t,{R:()=>l,x:()=>r});var o=i(6540);const n={},s=o.createContext(n);function l(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),o.createElement(s.Provider,{value:t},e.children)}},8702:e=>{e.exports=JSON.parse('{"permalink":"/blog/thanatology-4","source":"@site/blog/2025-09-19-thanatology-4/index.md","title":"\ud83e\udd89 Thanatology part 4: NTFS Forensics with the Exhume ToolKit.","description":"This blogpost is part of the Thanatology blogpost series. If you haven\u2019t check it out, I recommend reading the following first:","date":"2025-09-19T00:00:00.000Z","tags":[{"inline":true,"label":"Thanatology","permalink":"/blog/tags/thanatology"},{"inline":true,"label":"Exhume","permalink":"/blog/tags/exhume"},{"inline":true,"label":"Digital Forensics","permalink":"/blog/tags/digital-forensics"},{"inline":true,"label":"NTFS","permalink":"/blog/tags/ntfs"}],"readingTime":3.31,"hasTruncateMarker":true,"authors":[{"name":"k1nd0ne","title":"Digital Forensics Spiderman","url":"https://github.com/k1n0ne","page":{"permalink":"/blog/authors/k-1-nd-0-ne"},"socials":{"x":"https://x.com/k1nd0ne","github":"https://github.com/k1nd0ne","bluesky":"https://bsky.app/profile/k1nd0ne.bsky.social"},"imageURL":"https://avatars.githubusercontent.com/u/27780432?v=4","key":"k1nd0ne"}],"frontMatter":{"slug":"thanatology-4","title":"\ud83e\udd89 Thanatology part 4: NTFS Forensics with the Exhume ToolKit.","authors":["k1nd0ne"],"tags":["Thanatology","Exhume","Digital Forensics","NTFS"]},"unlisted":false,"nextItem":{"title":"\ud83d\udce6 VolWeb v3.15 July 2025 Release","permalink":"/blog/volweb-3-15"}}')},8743:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>h});var o=i(8702),n=i(4848),s=i(8453);const l={slug:"thanatology-4",title:"\ud83e\udd89 Thanatology part 4: NTFS Forensics with the Exhume ToolKit.",authors:["k1nd0ne"],tags:["Thanatology","Exhume","Digital Forensics","NTFS"]},r=void 0,a={authorsImageUrls:[void 0]},h=[{value:"Disclaimer",id:"disclaimer",level:2},{value:"History and origins of NTFS",id:"history-and-origins-of-ntfs",level:2},{value:"NTFS key layout concepts",id:"ntfs-key-layout-concepts",level:2},{value:"The Master File Table",id:"the-master-file-table",level:3},{value:"MFT transformations in time",id:"mft-transformations-in-time",level:4},{value:"Structure of a File in NTFS.",id:"structure-of-a-file-in-ntfs",level:3},{value:"The $Boot file",id:"the-boot-file",level:4}];function d(e){const t={a:"a",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"This blogpost is part of the Thanatology blogpost series. If you haven\u2019t check it out, I recommend reading the following first:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://www.forensicxlab.com/blog/thanatology",children:"Thanatology part 1: Introduction to the Thanatology project"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://www.forensicxlab.com/blog/thanatology-2",children:"Thanatology part 2: Multiple disk images formats handling using the Exhume ToolKit"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://www.forensicxlab.com/blog/thanatology-3",children:"Thanatology part 3: MBR and GPT forensics with the Exhume ToolKit."})}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:'We saw in the previous part how we could perform partitions discovery for the MBR and GPT scheme. The next step in our digital forensics examination process is to identify the type of Filesystem present on a given partition. In this blogpost, we will dive into the concept of the New Technology FileSystem better known as "NTFS".'}),"\n",(0,n.jsx)(t.p,{children:"We will explore the history behind this FileSystem, it's layout and specificities. We will dive into how the investigator can perform digital forensics on such filesystem to answer important questions during an investigation. Finally, the reader will have a basic introduction of the exhume_ntfs tool part of the Exhume Toolsuite."}),"\n",(0,n.jsx)(t.h2,{id:"disclaimer",children:"Disclaimer"}),"\n",(0,n.jsx)(t.p,{children:'My goal here is not to give you a complete description of the NTFS layout, you can find plenty of documentation online about it. However, I will describe the key structures that are usefull for an investigator to grasp in order to be able to answer the "WWWW" questions that might be raised during a digital forensics investigation:'}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"W"}),"ho performs action on files ?"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"W"}),"here files are coming from ?"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"W"}),"hen and how it did happen ?"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"W"}),"hat was done on the file ?"]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"history-and-origins-of-ntfs",children:"History and origins of NTFS"}),"\n",(0,n.jsx)(t.p,{children:"NTFS is the default FileSystem since Windows NT to the latest version of Windows 11 at time of writting of this blogpost. The NTFS filesystem is used and its layout is maintained by specific Microsoft Windows Kernel drivers. Although NTFS is thought to be used by the Microsoft Operating System it is possible for other operating systems to implement drivers that can understand NTFS (like the Linux NTFS Driver)."}),"\n",(0,n.jsx)(t.p,{children:"[HERE LET'S TALK MORE ABOUT THE HISTORY OF NTFS WHEN WE HAVE MORE DOCUMENTATION]"}),"\n",(0,n.jsx)(t.h2,{id:"ntfs-key-layout-concepts",children:"NTFS key layout concepts"}),"\n",(0,n.jsx)(t.p,{children:"A volume formated using NTFS have the following layout."}),"\n",(0,n.jsx)(t.p,{children:"[IMAGE HERE]"}),"\n",(0,n.jsx)(t.p,{children:"A volume with the Windows operating system installed have the following layout."}),"\n",(0,n.jsx)(t.h3,{id:"the-master-file-table",children:"The Master File Table"}),"\n",(0,n.jsxs)(t.p,{children:["In NTFS, everything is considered as a ",(0,n.jsx)(t.strong,{children:"file"}),'. To keep track of all of the files in the filesystem, NTFS is using a special file called the "Master File Table" or MFT in short. The MFT is located at the begining of the disk just after the "$Boot" file ',(0,n.jsx)(t.strong,{children:"when formating a volume"}),"."]}),"\n",(0,n.jsx)(t.p,{children:"[IMAGE HERE]"}),"\n",(0,n.jsxs)(t.p,{children:['We will come back on the $Boot file later in this blogpost. For now, let us now dive into the structure of the MFT itself. The MFT is composed of "',(0,n.jsx)(t.strong,{children:"Records"}),'" each record is build up from "',(0,n.jsx)(t.strong,{children:"Attributes"}),'". The list of possible attributes is defined in a special file called "',(0,n.jsx)(t.strong,{children:"$AttrDef"}),'". Each MFT record has a Standard Header, followed by a list of attributes (in order of ascending Attribute Id) and an end marker. The end marker is just four bytes: 0xFFFFFFFF.']}),"\n",(0,n.jsx)(t.p,{children:"[IMAGE HERE OF THE MFT STRUCTURE]"}),"\n",(0,n.jsx)(t.h4,{id:"mft-transformations-in-time",children:"MFT transformations in time"}),"\n",(0,n.jsx)(t.p,{children:"When a volume is freshly formated, the MFT size is small, but the more file are created, the more the MFT will grow in order to keep track of them. On the other hand, if the number of files are decreasing, the less file there is to keep track of. So, how does the filesystem adapts to theses changes ?"}),"\n",(0,n.jsx)(t.p,{children:"[HERE, this will be a good opportunity to talk about what is going on in the MFT when a file is created and deleted]"}),"\n",(0,n.jsx)(t.h3,{id:"structure-of-a-file-in-ntfs",children:"Structure of a File in NTFS."}),"\n",(0,n.jsx)(t.h4,{id:"the-boot-file",children:"The $Boot file"}),"\n",(0,n.jsx)(t.p,{children:'The $MFT is keeping track of the "$Boot" file. This file contains the important metadata for the Windows Kernel in order to be able to boot the operating system. The $Boot file is also keeping track of the information relative to the $MFT file.'})]})}function c(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);