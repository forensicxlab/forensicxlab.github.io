"use strict";(self.webpackChunkexhume=self.webpackChunkexhume||[]).push([[1631],{3998:e=>{e.exports=JSON.parse('{"permalink":"/blog/volads","source":"@site/blog/2023-11-18-volads/index.md","title":"\ud83d\udce6 Volatility3 : Alternate Data Stream Scan","description":"Windows executable analysis is a key aspect of Digital Forensics and Reverse Malware Engineering. Identifying the capabilities of a program can help to target potential malicious code and orient the later reverse code analysis phase. In this blogpost, we will dive into the structure of the Windows Portable Executable (PE) and how we can extract the imported functions in the context of memory analysis.","date":"2023-11-18T00:00:00.000Z","tags":[{"inline":true,"label":"DFIR","permalink":"/blog/tags/dfir"},{"inline":true,"label":"Volatility","permalink":"/blog/tags/volatility"},{"inline":true,"label":"Memory Forensics","permalink":"/blog/tags/memory-forensics"}],"readingTime":6.53,"hasTruncateMarker":true,"authors":[{"name":"k1nd0ne","title":"Digital Forensics Spiderman","url":"https://github.com/k1n0ne","page":{"permalink":"/blog/authors/k-1-nd-0-ne"},"socials":{"x":"https://x.com/k1nd0ne","github":"https://github.com/k1nd0ne"},"imageURL":"https://avatars.githubusercontent.com/u/27780432?v=4","key":"k1nd0ne"}],"frontMatter":{"slug":"volads","title":"\ud83d\udce6 Volatility3 : Alternate Data Stream Scan","authors":["k1nd0ne"],"tags":["DFIR","Volatility","Memory Forensics"]},"unlisted":false,"prevItem":{"title":"\ud83d\udce6 Volatility3 : Import Address Table","permalink":"/blog/voliat"},"nextItem":{"title":"\ud83d\udcd8 Volatility3: Modern Windows Hibernation file analysis","permalink":"/blog/hibernation"}}')},6771:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var a=n(3998),i=n(4848),o=n(8453);const s={slug:"volads",title:"\ud83d\udce6 Volatility3 : Alternate Data Stream Scan",authors:["k1nd0ne"],tags:["DFIR","Volatility","Memory Forensics"]},r=void 0,l={authorsImageUrls:[void 0]},c=[];function u(e){const t={p:"p",...(0,o.R)(),...e.components};return(0,i.jsx)(t.p,{children:"Windows executable analysis is a key aspect of Digital Forensics and Reverse Malware Engineering. Identifying the capabilities of a program can help to target potential malicious code and orient the later reverse code analysis phase. In this blogpost, we will dive into the structure of the Windows Portable Executable (PE) and how we can extract the imported functions in the context of memory analysis."})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var a=n(6540);const i={},o=a.createContext(i);function s(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);