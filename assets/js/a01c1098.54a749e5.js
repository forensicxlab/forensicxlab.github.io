"use strict";(self.webpackChunkexhume=self.webpackChunkexhume||[]).push([[6468],{3492:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>r,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var s=i(8083),n=i(4848),a=i(8453);const o={slug:"vision",title:"\ud83e\uddec Malware Analysis with VISION-ProcMon",authors:["k1nd0ne"],tags:["Malware Analysis","Windows","Procmon","Qbot"]},l=void 0,r={authorsImageUrls:[void 0]},c=[{value:"Behavioral analysis using VISION-ProcMon",id:"behavioral-analysis-using-vision-procmon",level:2},{value:"Conclusion",id:"conclusion",level:2}];function h(e){const t={a:"a",h2:"h2",img:"img",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Malware analysis is very useful when performing a digital investigation. Indeed, identifying how a malware works and determining its behavior is very useful to detect future attacks, other compromised equipment, make critical choices and discover new TTPs. In this blog article, we will dive into the behavioral analysis of the latest QBOT campaign using malicious OneNote documents as an initial vector to compromise a host and deploy stealers. This article will demonstrate a use case of VISION-ProcMon for behavioral analysis."}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Note:"})," This blog post is not a complete analysis of the sample but simply demonstrate the capabilities of the tool."]}),"\n",(0,n.jsx)(t.h2,{id:"behavioral-analysis-using-vision-procmon",children:"Behavioral analysis using VISION-ProcMon"}),"\n",(0,n.jsx)(t.p,{children:"For this example, we are performing the analysis of a malicious OneNote document extracted from a phishing email linked to one of the latest QBOT campaign in February 2023. When performing the behavioral analysis of this malicious document, the analyst is usually setting up a lab with tools to record the activities of the system while the malicious activities are performed to analyze them latter. Using the Procmon tool from the Microsoft\u2019s sysinternals, we can capture all the activities of processes running on the victim machine on demand."}),"\n",(0,n.jsx)(t.p,{children:"If we launch the capture and execute the malicious OneNote document, we will have the details about the processes involved in the infection. When saving the result, we can choose to save the result as a CSV document."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"alt text",src:i(7246).A+"",title:"Vision filtered",width:"1802",height:"1043"})}),"\n",(0,n.jsxs)(t.p,{children:["Once our export has been made, we can launch VISION-ProcMon and enter the full path of the file to load.\n",(0,n.jsx)(t.img,{alt:"alt text",src:i(4584).A+"",title:"Vision main menu",width:"1786",height:"1028"})]}),"\n",(0,n.jsxs)(t.p,{children:["Once our export has been made, we can launch VISION-ProcMon and enter the full path of the file to load.\n",(0,n.jsx)(t.img,{alt:"alt text",src:i(9859).A+"",title:"Vision filtered",width:"3434",height:"2086"})]}),"\n",(0,n.jsxs)(t.p,{children:["We can see that the ",(0,n.jsx)(t.strong,{children:"ONENOTE"})," process launched the mshta.exe process which is a legitimate Microsoft process used to execute web content outside of a web browser. It can be used to execute JavaScript, VBScripts and other compatible web technologies. In this case we can see that following this process execution, two new processes are created: curl.exe and rundll32.exe which is very suspicious. Before pivoting to those processes, we can check what are the files and registry keys the mshta.exe process interacted with."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"alt text",src:i(9692).A+"",title:"Vision filtered",width:"1387",height:"907"})}),"\n",(0,n.jsxs)(t.p,{children:["First, we can see that the process read the ",(0,n.jsx)(t.strong,{children:"Open.hta"})," file which is in the context of this malware analysis is the malicious HTA executed."]}),"\n",(0,n.jsxs)(t.p,{children:["Next, we can witness the creation of the malicious registry key ",(0,n.jsx)(t.strong,{children:"MP3Conv"}),". Then the ",(0,n.jsx)(t.strong,{children:"MP3Conv\\Cfg"})," value is set. In the context of the malware analysis, the malicious HTA is saving an encoded javascript function inside this registry key which is then executed. We can also see that the configuration is later deleted to clear tracks."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"alt text",src:i(5520).A+"",title:"Vision filtered",width:"1448",height:"1008"})}),"\n",(0,n.jsx)(t.p,{children:"Let\u2019s pivot to the curl.exe process which is the next step after executing the malicious script. The command line associated is interesting because it contains the command used to fetch a malicious DLL on a C2 server disguised as an image."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"alt text",src:i(8634).A+"",title:"Vision filtered",width:"1381",height:"847"})}),"\n",(0,n.jsx)(t.p,{children:"Finally, the script ends by executing the malicious DLL through the rundll32.exe process. We can pivot on the process and witness the command line associated to the execution."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"alt text",src:i(5141).A+"",title:"Vision filtered",width:"1381",height:"847"})}),"\n",(0,n.jsx)(t.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,n.jsxs)(t.p,{children:["VISION-ProcMon is a tool to help the malware analyst in his investigation. This means that it must be used in conjunction with other malware analysis tools (static, dynamic, \u2026). It is also a great way to complete your malware analysis reports by illustrating your explanations with visual examples. You can find the tool here : ",(0,n.jsx)(t.a,{href:"https://github.com/forensicxlab/VISION-ProcMon",children:"https://github.com/forensicxlab/VISION-ProcMon"})]}),"\n",(0,n.jsxs)(t.p,{children:["Do not hesitate to reach me at ",(0,n.jsx)(t.a,{href:"mailto:felix.guyard@forensicxlab.com",children:"felix.guyard@forensicxlab.com"})," to enhance this tool or this article!"]})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},4584:(e,t,i)=>{i.d(t,{A:()=>s});const s=i.p+"assets/images/1-fa69c30afab316e19fd06d43d2dddafa.png"},5141:(e,t,i)=>{i.d(t,{A:()=>s});const s=i.p+"assets/images/4-3f31888c683f51ce61f7867a5d26f9ec.png"},5520:(e,t,i)=>{i.d(t,{A:()=>s});const s=i.p+"assets/images/9-8fab180c775fecf0faa9502937cc17bf.png"},7246:(e,t,i)=>{i.d(t,{A:()=>s});const s=i.p+"assets/images/7-563e579662c64d056c29dc72bbc191b1.PNG"},8083:e=>{e.exports=JSON.parse('{"permalink":"/blog/vision","source":"@site/blog/2023-02-27-vision/index.md","title":"\ud83e\uddec Malware Analysis with VISION-ProcMon","description":"Malware analysis is very useful when performing a digital investigation. Indeed, identifying how a malware works and determining its behavior is very useful to detect future attacks, other compromised equipment, make critical choices and discover new TTPs. In this blog article, we will dive into the behavioral analysis of the latest QBOT campaign using malicious OneNote documents as an initial vector to compromise a host and deploy stealers. This article will demonstrate a use case of VISION-ProcMon for behavioral analysis.","date":"2023-02-27T00:00:00.000Z","tags":[{"inline":true,"label":"Malware Analysis","permalink":"/blog/tags/malware-analysis"},{"inline":true,"label":"Windows","permalink":"/blog/tags/windows"},{"inline":true,"label":"Procmon","permalink":"/blog/tags/procmon"},{"inline":true,"label":"Qbot","permalink":"/blog/tags/qbot"}],"readingTime":3.22,"hasTruncateMarker":true,"authors":[{"name":"k1nd0ne","title":"Digital Forensics Spiderman","url":"https://github.com/k1n0ne","page":{"permalink":"/blog/authors/k-1-nd-0-ne"},"socials":{"x":"https://x.com/k1nd0ne","github":"https://github.com/k1nd0ne","bluesky":"https://bsky.app/profile/k1nd0ne.bsky.social"},"imageURL":"https://avatars.githubusercontent.com/u/27780432?v=4","key":"k1nd0ne"}],"frontMatter":{"slug":"vision","title":"\ud83e\uddec Malware Analysis with VISION-ProcMon","authors":["k1nd0ne"],"tags":["Malware Analysis","Windows","Procmon","Qbot"]},"unlisted":false,"prevItem":{"title":"\ud83d\udd26 Debunking the Expert Witness Compression Format (EWF)","permalink":"/blog/ewf"},"nextItem":{"title":"\ud83d\udce6 Volatility3 Windows Plugin - AnyDesk","permalink":"/blog/anydesk"}}')},8453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>l});var s=i(6540);const n={},a=s.createContext(n);function o(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),s.createElement(a.Provider,{value:t},e.children)}},8634:(e,t,i)=>{i.d(t,{A:()=>s});const s=i.p+"assets/images/3-23cc2ae45db4b3e393c57dd23eb01643.png"},9692:(e,t,i)=>{i.d(t,{A:()=>s});const s=i.p+"assets/images/5-93042d81c1a8f4d7ff1c6494539347eb.png"},9859:(e,t,i)=>{i.d(t,{A:()=>s});const s=i.p+"assets/images/2-cf6e116c7190154a129b456107ca62ea.png"}}]);